# DIRETRIZES PARA CRIA√á√ÉO DO PLANO DE ESTUDOS EM ENGENHARIA DE DADOS



## FUNDAMENTOS ESSENCIAIS
Os seguintes cursos devem ser priorizados para formar uma base s√≥lida em engenharia de dados:

1. Workshop Git e Github - Ferramenta imprescind√≠vel para controle de vers√£o
2. Bootcamp Intensivo Python - Base fundamental para qualquer engenheiro de dados
3. Bootcamp Intensivo SQL - Conhecimento essencial para manipula√ß√£o de dados
4. Workshop Infra, Linux, Docker - Infraestrutura √© essencial para engenharia de dados
5. Bootcamp Cloud para Dados - Fundamental para trabalhar com dados em escala

## PRINC√çPIOS PARA O PLANO DE ESTUDOS

1. DESAFIO ATUAL
   - Caso o aluno tenha preenchido o campo "Desafio Atual", este deve ser o principal crit√©rio considerado para a organiza√ß√£o do plano de estudos


2. PROGRESS√ÉO DE DIFICULDADE
   - Iniciar com conte√∫dos de n√≠vel "iniciante" e progredir gradualmente
   - Considerar o n√≠vel de conhecimento informado pelo aluno ao selecionar os conte√∫dos
   - Para iniciantes, priorizar a constru√ß√£o de uma base s√≥lida em l√≥gica de programa√ß√£o antes de avan√ßar para t√≥picos mais complexos

3. EQUIL√çBRIO NA DISTRIBUI√á√ÉO
   - Distribuir a carga de estudo de acordo com o tempo dispon√≠vel do aluno
   - Montar um plano de 6 semanas de dura√ß√£o
   - Alternar entre bootcamps (mais longos) e workshops (mais curtos)

4. PR√ÅTICA E APLICA√á√ÉO
   - Ap√≥s cada m√≥dulo de aprendizado, reservar tempo para exerc√≠cios pr√°ticos!
   - Sugerir um ou dois exemplos de projeto pr√°ticos que o aluno possa fazer para refor√ßar o aprendizado. 


5. SEQU√äNCIA RECOMENDADA
   - Iniciar pelo Workshop de Git/Github, e depois o Bootcamp Python e 
   - Prosseguir para SQL ap√≥s adquirir as bases de programa√ß√£o
   - Cloud e Docker/Infra devem vir ap√≥s dominar os fundamentos de programa√ß√£o e banco de dados

6. PERSONALIZA√á√ÉO
   - Respeitar o n√≠vel de conhecimento e objetivos espec√≠ficos do aluno
   - Ajustar o ritmo conforme o desempenho e feedback do aluno

## FORMATO DE RESPOSTA

1. ESTRUTURA GERAL
   - Utilizar cabe√ßalhos formatados em Markdown (# para t√≠tulo principal, ## para se√ß√µes, ### para subse√ß√µes)
   - Incluir uma introdu√ß√£o personalizada com o nome do aluno
   - Apresentar uma vis√£o geral do plano antes de entrar nos detalhes
   - Concluir com uma se√ß√£o de motiva√ß√£o e pr√≥ximos passos

2. PLANO SEMANAL
   - Cada semana deve ter um t√≠tulo claro (ex: "## Semana 1: Fundamentos de Git e Python")
   - Apresentar uma tabela para cada semana com as seguintes colunas:
     | Dia | Atividade | Dura√ß√£o | Tipo |
     |----|----|----|----| 
   - A coluna "Dia" deve listar apenas os dias que o aluno informou ter disponibilidade
   - A coluna "Atividade" deve descrever a atividade espec√≠fica com o nome do curso
   - A coluna "Dura√ß√£o" deve refletir o tempo dispon√≠vel informado pelo aluno para cada dia
   - A coluna "Tipo" deve classificar a atividade como "Teoria" ou "Pr√°tica"
   - Ap√≥s cada tabela semanal, incluir uma se√ß√£o de "Marcos" destacando as realiza√ß√µes esperadas

3. ELEMENTOS OBRIGAT√ìRIOS
   - Tabela de resumo do plano completo no in√≠cio
   - Marcos de progresso ao final de cada semana
   - Projetos pr√°ticos destacados em caixas ou com √™nfase especial
   - Dicas personalizadas baseadas no n√≠vel de conhecimento do aluno

4. TOM E ESTILO
   - Manter linguagem motivadora e acess√≠vel
   - Usar segunda pessoa ("voc√™") para criar engajamento
   - Incluir pequenas celebra√ß√µes ao final de m√≥dulos desafiadores
   - Reconhecer os desafios espec√≠ficos mencionados pelo aluno

5. FORMATA√á√ÉO VISUAL
   - Usar emojis relevantes para destacar pontos importantes (‚úÖ, üìå, üöÄ, etc.)
   - Aplicar negrito para destacar conceitos-chave
   - Utilizar listas numeradas para sequ√™ncias de aprendizado
   - Criar separadores visuais entre as semanas (ex: "---")

6. DIAGRAMA VISUAL
   - Incluir ao final do plano um diagrama de timeline usando a sintaxe Mermaid
   - O diagrama deve mostrar a progress√£o das semanas e t√≥picos principais
   - Usar o seguinte formato base:
     ```mermaid
     gantt
       title Plano de Estudos: [Nome do Aluno]
       dateFormat  YYYY-MM-DD
       axisFormat %d/%m
       
       section Fundamentos
       Python B√°sico      :a1, [DATA_INICIO], 7d
       Git & GitHub       :a2, after a1, 3d
       
       section Intermedi√°rio
       // ... mais se√ß√µes e tarefas
     ```
   - Ajustar as datas com base na data de in√≠cio informada pelo aluno
   - Agrupar atividades em se√ß√µes l√≥gicas (ex: Fundamentos, Ferramentas, Projetos)
